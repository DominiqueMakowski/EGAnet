% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EGA.fit.R
\name{EGA.fit}
\alias{EGA.fit}
\title{EGA Optimal Model Fit}
\usage{
EGA.fit(data, model = c("glasso", "TMFG"), steps = c(3, 4, 5, 6, 7, 8))
}
\arguments{
\item{data}{A dataset}

\item{model}{A string indicating the method to use. Current options are:
-\code{glasso}:
{Gaussian graphical model estimation using graphical LASSO with extended Bayesian information criterion to select optimal regularization parameter (default method). Using \code{\link[qgraph]{EBICglasso}} from the \code{\link[qgraph]{qgraph}} package.}
\code{TMFG}:
{Estimates a Triangulated Maximally Filtered Graph, using the function \code{\link[NetworkToolbox]{TMFG}} of the \code{\link[NetworkToolbox]{NetworkToolbox}} package}}

\item{steps}{Range of steps to be used in the model selection.
Defaults from 3 to 8 steps (based on Pons & Latapy, 2006)}
}
\value{
Returns a list containing the \code{\link{EGA}} output
and the number of steps found to provide the optimal solution
}
\description{
Estimates the best fitting model using \code{\link{EGA}}.
The number of steps in the \code{\link[igraph]{walktrap.community}} detection
algorithm is varied and unique community solutions are compared using
\code{\link{entropyFit}}.
}
\examples{
tmfg <- EGA.fit(data = wmt2[,7:24], model = "TMFG")

entropyFit(data = wmt2[,7:24], comm = tmfg$wc)

entropyFit(data = wmt2[,7:24], comm = EGA(data = wmt2[,7:24], model = "TMFG")$wc)

}
\references{
Pons, P., & Latapy, M. (2006).
Computing communities in large networks using random walks.
\emph{Journal of Graph Algorithms and Applications}, \emph{10}, 191-218.
doi:\href{https://doi.org/10.7155/jgaa.00185}{10.7155/jgaa.00185}
}
\seealso{
\code{\link{EGA}} to estimate the number of dimensions of an instrument using EGA and \code{\link{CFA}} to
verify the fit of the structure suggested by EGA using confirmatory factor analysis.
}
\author{
Hudson F. Golino <hfg9s at virginia.edu> and Alexander Christensen <alexpaulchristensen@gmail.com>
}

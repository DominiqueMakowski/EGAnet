% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/EGA.R
\name{EGA}
\alias{EGA}
\title{Applies the Exploratory Graph Analysis technique}
\usage{
EGA(
  data,
  n = NULL,
  corr = c("auto", "pearson", "spearman"),
  na.data = c("pairwise", "listwise"),
  model = c("BGGM", "glasso", "TMFG"),
  algorithm = c("leiden", "louvain", "walktrap"),
  uni.method = c("expand", "LE", "louvain"),
  plot.EGA = TRUE,
  verbose = FALSE,
  ...
)
}
\arguments{
\item{data}{Numeric matrix or data frame.
Either data representing \emph{only} the variables of interest or
a correlation matrix. Data that are not numeric will be
removed from the dataset}

\item{n}{Numeric (length = 1).
Sample size if \code{data} is a correlation matrix}

\item{corr}{Character (length = 1).
Method to compute correlations.
Defaults to \code{"auto"} to automatically compute
appropriate correlations using \code{\link[EGAnet]{auto.correlate}}.
\code{"pearson"} and \code{"spearman"} are provide for completeness.
For other similarity measures, compute them first and input them
into \code{data} with the sample size (\code{n})}

\item{na.data}{Character (length = 1).
How should missing data be handled?
Available options:

\itemize{

\item{\code{"pairwise"}}
{Computes correlation for all available cases between
two variables}

\item{\code{"listwise"}}
{Computes correlation for all complete cases in the dataset}

}}

\item{model}{Character (length = 1).
Available options:

\itemize{

\item{\code{"BGGM"}}
{Computes the Bayesian Gaussian Graphical Model.
Set argument \code{ordinal.categories} to determine
levels allowed for a variable to be considered ordinal.
See \code{\link[BGGM]{estimate}} for more details}

\item{\code{"glasso"}}
{Computes the GLASSO with EBIC model selection.
See \code{\link[EGAnet]{EBICglasso.qgraph}} for more details}

\item{\code{"TMFG"}}
{Computes the TMFG method.
See \code{\link[EGAnet]{TMFG}} for more details}

}}

\item{algorithm}{Character or \code{\link{igraph}} \code{cluster_*} function.
Three options are listed below but all are available
(see \code{\link[EGAnet]{community.detection}} for other options):

\itemize{

\item{\code{"leiden"}}
{See \code{\link[igraph]{cluster_leiden}} for more details}

\item{\code{"louvain"}}
{By default, \code{"louvain"} will implement the non-signed version
of the Louvain algorithm using the consensus clustering method 
(see \code{\link[EGAnet]{community.consensus}} for more information). 
This function will implement \code{consensus.method = "most_common"}
and \code{consensus.iter = 1000} unless specified otherwise}

\item{\code{"walktrap"}}
{This algorithm is the default. See \code{\link[EGAnet]{cluster_walktrap}} for more details}

}}

\item{uni.method}{Character.
What unidimensionality method should be used? 
Defaults to \code{"louvain"}.
Current options are:

\itemize{

\item{\strong{\code{expand}}}
{Expands the correlation matrix with four variables correlated .50.
If number of dimension returns 2 or less in check, then the data 
are unidimensional; otherwise, regular EGA with no matrix
expansion is used. This is the method used in the Golino et al. (2020)
\emph{Psychological Methods} simulation.}

\item{\strong{\code{LE}}}
{Applies the Leading Eigenvalue algorithm (\code{\link[igraph]{cluster_leading_eigen}})
on the empirical correlation matrix. If the number of dimensions is 1,
then the Leading Eigenvalue solution is used; otherwise, regular EGA
is used. This is the final method used in the Christensen, Garrido,
and Golino (2021) simulation.}

\item{\strong{\code{louvain}}}
{Applies the Louvain algorithm (\code{\link[igraph]{cluster_louvain}})
on the empirical correlation matrix using a resolution parameter = 0.95.
If the number of dimensions is 1, then the Louvain solution is used; otherwise,
regular EGA is used. This method was validated in the Christensen (2022) simulation.}

}}

\item{plot.EGA}{Boolean.
If \code{TRUE}, returns a plot of the network and its estimated dimensions.
Defaults to \code{TRUE}}

\item{verbose}{Boolean.
Whether messages and (insignificant) warnings should be output.
Defaults to \code{FALSE} (silent calls).
Set to \code{TRUE} to see all messages and warnings for every function call}

\item{...}{Additional arguments to be passed on to
\code{\link[EGAnet]{auto.correlate}}, \code{\link[EGAnet]{network.estimation}},
\code{\link[EGAnet]{community.detection}}, and
\code{\link[EGAnet]{community.consensus}}}
}
\value{
Returns a list containing:

\item{network}{A symmetric network estimated using either the
\code{\link{EBICglasso.qgraph}} or \code{\link[EGAnet]{TMFG}}}

\item{wc}{A vector representing the community (dimension) membership
of each node in the network. \code{NA} values mean that the node
was disconnected from the network}

\item{n.dim}{A scalar of how many total dimensions were identified in the network}

\item{cor.data}{The zero-order correlation matrix}
}
\description{
Estimates the number of dimensions of a given dataset or correlation matrix
using the graphical lasso (\code{\link{EBICglasso.qgraph}}) or the
Triangulated Maximally Filtered Graph (\code{\link[EGAnet]{TMFG}})
network estimation methods.
}
\details{
Two community detection algorithms, Walktrap (Pons & Latapy, 2006) and
Louvain (Blondel et al., 2008), are pre-programmed because of their
superior performance in simulation studies on psychological
data generated from factor models (Christensen & Golino; 2020; Golino et al., 2020).
Notably, any community detection algorithm from the \code{\link{igraph}}
can be used to estimate the number of communities (see examples).
}
\examples{
# Obtain data
wmt <- wmt2[,7:24]

\dontrun{
# Estimate EGA
ega.wmt <- EGA(
  data = wmt,
  plot.EGA = FALSE # No plot for CRAN checks
)

# Summary statistics
summary(ega.wmt)

# Produce Methods section
methods.section(ega.wmt)

# Estimate EGAtmfg
ega.wmt.tmfg <- EGA(
  data = wmt, model = "TMFG"
)

# Estimate EGA with Louvain algorithm
ega.wmt.louvain <- EGA(
  data = wmt, algorithm = "louvain"
)

# Estimate EGA with Leiden algorithm
ega.wmt.leiden <- EGA(
  data = wmt, algorithm = "leiden"
)

# Estimate EGA with Spinglass algorithm
ega.wmt.spinglass <- EGA(
  data = wmt,
  algorithm = igraph::cluster_spinglass
)}

}
\references{
# Louvain algorithm \cr
Blondel, V. D., Guillaume, J.-L., Lambiotte, R., & Lefebvre, E. (2008).
Fast unfolding of communities in large networks.
\emph{Journal of Statistical Mechanics: Theory and Experiment}, \emph{2008}, P10008.

# Comprehensive unidimensionality simulation \cr
Christensen, A. P. (2022).
Unidimensional community detection: A Monte Carlo simulation, grid search, and comparison.
\emph{PsyArXiv}.

# Compared all \emph{igraph} community detections algorithms, introduced Louvain algorithm, simulation with continuous and polytomous data \cr
# Also implements the Leading Eigenvalue unidimensional method \cr
Christensen, A. P., Garrido, L. E., & Golino, H. (2021).
Comparing community detection algorithms in psychological data: A Monte Carlo simulation.
\emph{PsyArXiv}.

# Original simulation and implementation of EGA \cr
Golino, H. F., & Epskamp, S. (2017).
Exploratory graph analysis: A new approach for estimating the number of dimensions in psychological research.
\emph{PLoS ONE}, \emph{12}, e0174035.

Golino, H. F., & Demetriou, A. (2017).
Estimating the dimensionality of intelligence like data using Exploratory Graph Analysis.
\emph{Intelligence}, \emph{62}, 54-70.

# Current implementation of EGA, introduced unidimensional checks, continuous and dichotomous data \cr
Golino, H., Shi, D., Christensen, A. P., Garrido, L. E., Nieto, M. D., Sadana, R., & Thiyagarajan, J. A. (2020).
Investigating the performance of Exploratory Graph Analysis and traditional techniques to identify the number of latent factors: A simulation and tutorial.
\emph{Psychological Methods}, \emph{25}, 292-320.

# Walktrap algorithm \cr
Pons, P., & Latapy, M. (2006).
Computing communities in large networks using random walks.
\emph{Journal of Graph Algorithms and Applications}, \emph{10}, 191-218.
}
\seealso{
\code{\link{bootEGA}} to investigate the stability of EGA's estimation via bootstrap
and \code{\link{CFA}} to verify the fit of the structure suggested by EGA using confirmatory factor analysis.
}
\author{
Hudson Golino <hfg9s at virginia.edu>, Alexander P. Christensen <alexpaulchristensen at gmail.com>, Maria Dolores Nieto <acinodam at gmail.com> and Luis E. Garrido <garrido.luiseduardo at gmail.com>
}
